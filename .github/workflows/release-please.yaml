name: release-please

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: release-please-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      account--tag_name: ${{ steps.release.outputs.account--tag_name }}
      account--release_created: ${{ steps.release.outputs.account--release_created }}
      membership--tag_name: ${{ steps.release.outputs.membership--tag_name }}
      membership--release_created: ${{ steps.release.outputs.membership--release_created }}
      purchase--tag_name: ${{ steps.release.outputs.purchase--tag_name }}
      purchase--release_created: ${{ steps.release.outputs.purchase--release_created }}
    steps:
      - uses: actions/checkout@v4
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GH_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Print release outputs for debugging
        continue-on-error: true
        run: |
          echo "Release outputs:"
          echo "${{ toJson(steps.release.outputs) }}" | jq .

  release-account:
    if: ${{ needs.release-please.outputs.account--release_created }}
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - uses: actions/checkout@v4
      - name: Build Account
        run: |
          cd account
          go test ./...
          go build -o account-main .
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.account--tag_name }} account/account-main

  release-membership:
    if: ${{ needs.release-please.outputs.membership--release_created }}
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - uses: actions/checkout@v4
      - name: Build Membership
        run: |
          cd membership
          go test ./...
          go build -o membership-main .
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.membership--tag_name }} membership/membership-main

  release-purchase:
    if: ${{ needs.release-please.outputs.purchase--release_created }}
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - uses: actions/checkout@v4
      - name: Build Purchase
        run: |
          cd purchase
          go test ./...
          go build -o purchase-main .
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.purchase--tag_name }} purchase/purchase-main
